digraph G {
rankdir = LR;

labeljust=right;

node [shape = "rectangle", fontname = "arial"];
//------------------------------------------------------------
file_name [label = "file\nname"];
parsed_expression [label = "parsed\nexpression"];

node [shape = "rectangle", fontname = "courier"];
//------------------------------------------------------------
DependGraph;
TaskSchedule;
MapSchedule;
SerialSchedule;
GeneratedCode;

node [shape = "oval", fontname = "arial"];
//------------------------------------------------------------
socket_code_generator [label = "socket code\ngenerator"];
parallel_package_code_generator [label = "parallel package\ncode generator"];

node [shape = "oval", fontname = "courier"];
//------------------------------------------------------------
depend_graph;
serial_scheduler;
task_scheduler;
map_scheduler;
serial_scheduler;

node [style = "filled", shape = "oval", fontname = "courier"];
//------------------------------------------------------------
forkjoin_scheduler;
ForkJoinSchedule [shape = "rectangle"];

node [fontname = "arial"];
hive_code_generator [label = "Apache Hive\ncode generator"];
future_code_generator [label = "R future package\ncode generator"];
mcparallel_code_generator [label = "parallel::mcparallel\ncode generator"];


file_name -> depend_graph;
parsed_expression -> depend_graph;
depend_graph -> DependGraph;
DependGraph -> task_scheduler;
DependGraph -> map_scheduler;
DependGraph -> serial_scheduler;
DependGraph -> forkjoin_scheduler;
task_scheduler -> TaskSchedule;
serial_scheduler -> SerialSchedule;
map_scheduler -> MapSchedule;
SerialSchedule -> GeneratedCode [label = "non op"];
TaskSchedule -> socket_code_generator;
MapSchedule -> parallel_package_code_generator;
MapSchedule -> hive_code_generator;
hive_code_generator -> GeneratedCode;
socket_code_generator -> GeneratedCode;
parallel_package_code_generator -> GeneratedCode;
forkjoin_scheduler -> ForkJoinSchedule;
ForkJoinSchedule -> future_code_generator;
ForkJoinSchedule -> mcparallel_code_generator;
future_code_generator -> GeneratedCode;
mcparallel_code_generator -> GeneratedCode;

// Bypass
edge [style = "dotted"];
//------------------------------------------------------------
task_scheduler -> SerialSchedule;
map_scheduler -> SerialSchedule;
forkjoin_scheduler -> SerialSchedule;
}
