% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/order.R
\name{orderBottomLevel}
\alias{orderBottomLevel}
\title{Order Nodes By Bottom Level Order}
\usage{
orderBottomLevel(graph)
}
\arguments{
\item{graph}{object of class \linkS4class{TimedDependGraph}}
}
\value{
integer vector to permute the expressions in \code{x@code}
}
\description{
Permute the nodes of the graph so that they are ordered in decreasing
bottom level precedence order. The bottom level of a node is the length
of the longest path starting at that node and going to the end of the
program.
}
\details{
This permutation respects the partial order of the graph, so executing
the permuted code will produce the same result as the original code.
There are many possible node precedence orders.
}
\examples{
graph <- inferGraph(code = parse(text = "x <- 1:100
y <- rep(1, 100)
z <- x + y"), time = c(1, 2, 1))
bl <- orderBottomLevel(graph)
}
\references{
\emph{Task Scheduling for Parallel Systems}, Sinnen, O.
claim bottom level order provides good average performance. I'm not sure
if this claim holds for general data analysis scripts.
}
